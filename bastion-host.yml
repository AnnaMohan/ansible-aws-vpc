---
  - name: Setup Bastion Host
    hosts: localhost
    connection: local
    gather_facts: false
   
    tasks:
      # - name: import bastion setup variables
      #   include_vars:
      #     file: vars/bastion_setup.txt
      
      - name: import vpc output variables
        include_vars:
          file: vars/output_vars.txt
      
      - name: import vpc output variables
        include_vars:
          file: vars/vpc_setup.txt

      - name: keypair for bastion hosts
        ec2_key:
          name: "bastion_key"
          region: "{{ region }}"
          # state: present
        register: keypair_out
  
      - name: store keypair
        debug:
          var:  keypair_out

      - name: save private key file
        copy:
          content: "{{ keypair_out.key.name }}.pem"
          dest: "./bastion-key"
          mode: 0400

      - name: Create Security Group
        ec2_group:
          name: "bastion_sg"
          description: "Security"
          region: "{{ region }}"
          vpc_id: "{{ vpc_id }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: "{{MYIP}}"
        register: bastion_sg_out

      - debug:
          var: bastion_sg_out.group_id
      
      - name: insert this bastion sg id into output_vars.txt
        blockinfile:
          path: vars/output_vars.txt
          backup: yes
          block: |
            bastion_sg_id: "{{ bastion_sg_out.group_id }}"
          insertafter: EOF

      - name: Check if Bastion Host instance already exists
        ec2_instance_info:
          region: "{{ region }}"
          filters:
            "tag:Name": "bastion-host"
            instance-state-name: ["Pending", "Running", "Stopped", "Stopping"]
        register: bastion_instance_info

      # - name: Create Bastion Host instance
      #   ec2: #works with ec2 module but exact_count and count_tag not working
      #     key_name: bastion_key
      #     instance_type: t2.micro
      #     image: "{{ bastion_ami }}"
      #     wait: true
      #     region: "{{ region }}"
      #     wait: yes
      #     wait_timeout: 300
      #     instance_tags:
      #       Name: "bastion-host"
      #       Owner: "vprofile"
      #     # exact_count: 1
      #     # count_tag:
      #     #   Name: "bastion-host"
      #     #   Project: "vprofile"
      #     #   Owner: "vprofile"
      #     group_id: "{{ bastion_sg_out.group_id }}"
      #     vpc_subnet_id: "{{ pubsub1_id }}"
      #   register: bastion_instance_out
      #   when: bastion_instance_info.instances | length == 0


      - name: Create Bastion Host instance if not exists
        ec2_instance:
          name: "bastion-host"
          key_name: bastion_key
          instance_type: t2.micro
          image_id: "{{ bastion_ami }}"
          region: "{{ region }}"
          wait: yes
          security_groups: 
            - "{{ bastion_sg_out.group_id }}"
          vpc_subnet_id: "{{ pubsub1_id }}"
          tags:
            Name: "bastion-host"
            Owner: "vprofile"
            Project: "vprofile"
        when: bastion_instance_info.instances | length == 0

        
      
      - name: Print Bastion Host ID
        debug:
          var: bastion_instance_out.instances[0].id
          
