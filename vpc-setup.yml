- hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Include Variables
      include_vars:
        file: vpc_setup.txt

    - name: Create VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpcCidr }}"
        region: "{{ region }}"
        state: present
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{ state }}"
        tags:
          Name: "{{ vpc_name }}"
      register: vpcout

    - name: Print VPC ID
      debug:
        var: vpcout.vpc.id

    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub1Cidr }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        map_public: yes
        tags:
          Name: "vprofile-pubsub1"
      register: pubsub1_out

    - name: Print pubSub1 ID
      debug:
          var: pubsub1_out.subnet.id

    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub2Cidr }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        map_public: yes
        tags:
          Name: "vprofile-pubsub2"
      register: pubsub2_out

    - name: Print pubSub2 ID
      debug:
          var: pubsub2_out.subnet.id


    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PubSub3Cidr }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        map_public: yes
        tags:
          Name: "vprofile-pubsub3"
      register: pubsub3_out

    - name: Print pubSub3 ID  
      debug:
          var: pubsub3_out.subnet.id

    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub1Cidr }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        map_public: no
        tags:
          Name: "vprofile-privsub1"
      register: privsub1_out


    - name: Print privSub1 ID
      debug:
          var: privsub1_out.subnet.id
    
    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub2Cidr }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        map_public: no
        tags:
          Name: "vprofile-privsub2"
      register: privsub2_out

    - name: Print privSub2 ID
      debug:
          var: privsub2_out.subnet.id
    
    - name: Create Subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        cidr: "{{ PrivSub3Cidr }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        map_public: no
        tags:
          Name: "vprofile-privsub3"
      register: privsub3_out

    - name: Print privSub3 ID
      debug:
          var: privsub3_out.subnet.id


    - name: Create Internet Gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state:  "{{ state }}"
        resource_tags:
          Name: "vprofile-IGW"
      register: igw_out

    # - name: Print Internet Gateway ID
    #   debug:
    #     var: igw.gateway_id

    # - name: Attach Internet Gateway to VPC
    #   ec2_vpc_igw:
    #     vpc_id: "{{ vpc.vpc.id }}"
    #     gateway_id: "{{ igw.gateway_id }}"
    #     state: present

    # - name: Create Route Table
    #   ec2_vpc_route_table:
    #     vpc_id: "{{ vpc.vpc.id }}"
    #     state: present
    #     tags:
    #       Name: "{{ route_table_name }}"
    #   register: route_table

    # - name: Print Route Table ID
    #   debug:
    #     var: route_table.route_table.id

    # - name: Create Route
    #   ec2_vpc_route_table:
    #     vpc_id: "{{ vpc.vpc.id }}"
    #     route_table_id: "{{ route_table.route_table.id }}"
    #     dest: